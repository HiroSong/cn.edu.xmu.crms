<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.xmu.crms.mapper.RoundMapper" >

    <resultMap id="roundMap" type="Round">
        <id property="id" column="id"/>
        <result property="roundSerial" column="round_serial"/>
        <result property="presentationScoreMethod" column="presentation_score_method"/>
        <result property="reportScoreMethod" column="report_score_method"/>
        <result property="questionScoreMethod" column="question_score_method"/>
        <association property="course" javaType="Course">
            <id property="id" column="course_id"/>
            <result property="courseName" column="course_name"/>
            <result property="introduction" column="introduction"/>
        </association>
    </resultMap>

    <resultMap id="roundScoreMap" type="RoundScore">
        <result property="totalScore" column="total_score"/>
        <result property="presentationScore" column="presentation_score"/>
        <result property="reportScore" column="report_score"/>
        <result property="questionScore" column="question_score"/>
        <association property="team" javaType="Team">
            <id property="id" column="team_id"/>
            <result property="teamName" column="team_name"/>
            <result property="teamSerial" column="team_serial"/>
            <result property="klassSerial" column="klass_serial"/>
        </association>
        <association property="round" javaType="Round">
            <id property="id" column="round_id"/>
            <result property="roundSerial" column="round_serial"/>
        </association>
    </resultMap>

    <!--根据courseID获取roundID列表-->
    <select id="listRoundIDByCourseID"  resultType="BigInteger" parameterType="BigInteger">
        SELECT id FROM round WHERE course_id = #{courseID}
    </select>

    <!--根据roundID获取round对象-->
    <select id="getRoundByRoundID"  resultMap="roundMap" parameterType="BigInteger">
        SELECT * FROM round,course WHERE round.id = #{roundID} AND round.course_id = course.id
    </select>

    <!--根据roundID和klassID获得报名次数限制-->
    <select id="getSignUpNumberByRoundAndKlassID" resultType="HashMap" parameterType="BigInteger">
        SELECT klass_round.klass_id klassID,klass_round.enroll_number signUpNumber,klass.grade klassGrade,
        klass.klass_serial klassSerial
        FROM klass_round,klass WHERE round_id = #{param1} AND klass_id = #{param2} AND klass.id = #{param2}
    </select>

    <!--根据round修改round计算规则-->
    <update id="updateRuleByRound" parameterType="Round">
        UPDATE round SET presentation_score_method = #{presentationScoreMethod},
        report_score_method = #{reportScoreMethod}, question_score_method = #{questionScoreMethod}
        WHERE  round.id = #{id}
    </update>

    <!--根据roundID和teamID获取roundScore对象-->
    <select id="getRoundScoreByRoundAndTeamID"  resultMap="roundScoreMap" parameterType="BigInteger">
        SELECT * FROM round_score,round,team WHERE round_score.round_id = #{param1} AND round_score.team_id = #{param2}
        AND team.id = #{param2} AND round.id = #{param1}
    </select>

    <!--根据roundID获取RoundScore列表-->
    <select id="listRoundScoresByRoundID"  resultMap="roundScoreMap" parameterType="BigInteger">
        SELECT * FROM round_score,round,team WHERE round_score.round_id = #{roundID} AND round.id = #{roundID}
        AND round_score.team_id = team.id
    </select>

    <!--根据roundScore修改round_score表-->
    <update id="updateRoundScoreByRoundScore" parameterType="RoundScore">
        UPDATE round_score SET presentation_score = #{presentationScore},
        report_score = #{reportScore}, question_score = #{questionScore},total_score = #{totalScore}
        WHERE  round_id = #{round.id} AND team_id = #{team.id};
    </update>

    <!--根据courseID和roundSerial获得roundID-->
    <select id="getRoundIDByCourseIDAndRoundSerial" parameterType="Seminar" resultType="BigInteger">
        SELECT id FROM round WHERE course_id = #{courseID} AND round_serial = #{roundOrder}
    </select>

    <!--插入新的Round-->
    <insert id="insertRound" parameterType="Round" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO round(course_id,round_serial,presentation_score_method,report_score_method,question_score_method)
        VALUE (#{course.id},#{roundSerial},0,0,0)
    </insert>

    <insert id="insertKlassRound" parameterType="HashMap">
        INSERT INTO klass_round(klass_id,round_id,enroll_number)
        VALUE(#{klassID},#{roundID},1)
    </insert>

    <!--返回上一条插入语句的ID-->
    <select id="getLastInsertID" resultType="BigInteger">
        SELECT LAST_INSERT_ID();
    </select>

    <!--修改每个轮次每个班级的报名次数-->
    <update id="updateSignUpNumber" parameterType="HashMap">
        UPDATE klass_round SET enroll_number = #{signUpNumber} WHERE klass_id = #{klassID} AND round_id = #{roundID}
    </update>

</mapper>
