<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.xmu.crms.mapper.StudentMapper" >

    <!--根据studentID获取student对象-->
    <select id="getStudentByStudentID"  resultType="Student" parameterType="BigInteger">
        SELECT id id,account username,password password,is_active beActive,student_name name,email email
        FROM student WHERE id = #{studentID}
    </select>

    <!--根据courseID获取未组队学生ID列表-->
    <select id="listNoTeamStudentsIDByCourseID"  resultType="BigInteger" parameterType="BigInteger">
        SELECT student_id FROM klass_student WHERE course_id = #{courseID} AND team_id IS NULL
    </select>

    <!--获取所有学生ID-->
    <select id="listAllStudentsID" resultType="BigInteger">
        SELECT id FROM student
    </select>

    <!--修改某个学生的信息（除了密码）-->
    <update id="updateStudentInfoByStudent" parameterType="Student">
        UPDATE student SET account = #{username}, email = #{email}, student_name = #{name}
        WHERE  id = #{id}
    </update>

    <!--重置某个学生的密码-->
    <update id="resetStudentPasswordByStudentID" parameterType="BigInteger">
        UPDATE student SET password = 123456 WHERE id = #{studentID}
    </update>

    <!--根据studentID删除student表内信息-->
    <delete id="deleteStudentByStudentID" parameterType="BigInteger">
        DELETE FROM student WHERE id = #{studentID}
    </delete>


    <!--激活某个学生的账号-->
    <update id="updateStudentActiveByStudentID" parameterType="Student">
        UPDATE student SET is_acctive = 1,password = #{password},email = #{email} WHERE  id = #{id}
    </update>

    <!--根据teamID查询leaderID-->
    <select id="getLeaderIDByTeamID"  resultType="BigInteger" parameterType="BigInteger">
        SELECT leader_id FROM team WHERE id = #{teamID}
    </select>

    <!--根据学号获取学生对象-->
    <select id="getStudentByStudentAccount" parameterType="String" resultType="Student">
        SELECT id id, account username, password password, student_name name, email email FROM student WHERE account = #{username}
    </select>

    <!--插入一个Student信息-->
    <insert id="insertStudent" parameterType="User">
        INSERT INTO student(account,password,student_name,email,is_active)
            VALUE (#{username},#{password},#{name},"",0)
    </insert>

    <!--根据学号列表获取id列表-->
    <select id="listStudentID" parameterType="java.util.List" resultType="BigInteger">
        SELECT id FROM student WHERE account in
            <foreach collection="list" item="student" index="index" open="(" separator="," close=")">
                #{student.username}
            </foreach>
    </select>
    
    <!--获取一个小组的所有成员-->
    <select id="listMembersByTeamID" resultType="Student" parameterType="BigInteger">
        SELECT id id,account username,password password,is_active beActive,student_name name,email email FROM student,
        team_student WHERE student.id = team_student.student_id AND team_student.team_id = #{teamID}
    </select>

    <update id="updateStudentPassword" parameterType="User">
        UPDATE student SET password = #{password} WHERE id = #{id}
    </update>

</mapper>
